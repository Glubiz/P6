import { HostAndPort } from 'tinkerhub-discovery';
import { AuthProvider, DisconnectReason, TransportOptions } from 'ataraxia-transport';
import { EncryptedStreamingPeer } from 'ataraxia-transport-streams';
/**
 * Peer for TCP transport, used for outgoing connections to a server.
 */
export declare class TCPClientPeer extends EncryptedStreamingPeer {
    addresses: HostAndPort[];
    private readonly backOff;
    private addressAttempt;
    private connectTimeout;
    constructor(options: TransportOptions, authProviders: ReadonlyArray<AuthProvider>, addresses: HostAndPort[]);
    protected handleDisconnect(reason: DisconnectReason, err?: Error): void;
    /**
     * Attempt to connect to a server, will try addresses in order.
     */
    private tryConnect;
    protected didConnect(): void;
    disconnect(): void;
    stopConnecting(): void;
}
//# sourceMappingURL=TCPClientPeer.d.ts.map