"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TCPPeerMDNSDiscovery = void 0;
const tinkerhub_mdns_1 = require("tinkerhub-mdns");
/**
 * Discovery of peers using mDNS and DNS-SD on the local network. Will announce
 * using the name of the network.
 *
 * This discovery is intended to be used with {@link TCPBasedTransport}.
 *
 * Example:
 *
 * ```javascript
 * import { Network, AnonymousAuth } from 'ataraxia';
 * import { TCPTransport, TCPPeerMDNSDiscovery } from 'ataraxia-tcp';
 *
 * const net = new Network({
 *   name: 'ataraxia-example',
 *
 *   transports: [
 *     new TCPTransport({
 *       discovery: new TCPPeerMDNSDiscovery(),
 *
 *       authentication: [
 *         new AnonymousAuth()
 *       ]
 *     })
 *   ]
 * });
 * ```
 */
class TCPPeerMDNSDiscovery {
    newDiscovery(options) {
        return new tinkerhub_mdns_1.MDNSServiceDiscovery({
            type: options.networkName
        }).filter(service => service.name !== options.networkId);
    }
    publish(options) {
        return new tinkerhub_mdns_1.MDNSServicePublisher({
            name: options.networkId,
            type: options.networkName,
            port: options.port
        });
    }
}
exports.TCPPeerMDNSDiscovery = TCPPeerMDNSDiscovery;
//# sourceMappingURL=TCPPeerMDNSDiscovery.js.map